const fetch = require('node-fetch');

const API_URL = process.env.API_URL || 'http://localhost:4000';

async function testRetroReportsAPI() {
  console.log('üß™ Test des API R√©troReports...\n');

  try {
    // Test 1: R√©cup√©ration des rapports
    console.log('1Ô∏è‚É£ Test GET /admin/retro-reports');
    const response = await fetch(`${API_URL}/admin/retro-reports`, {
      headers: {
        'Authorization': 'Bearer test-token', // Remplacer par un vrai token
        'Content-Type': 'application/json'
      }
    });

    if (response.ok) {
      const data = await response.json();
      console.log(`‚úÖ Succ√®s: ${data.reports?.length || 0} rapports r√©cup√©r√©s`);
    } else {
      console.log(`‚ùå √âchec: ${response.status} - ${response.statusText}`);
    }

    // Test 2: Cr√©ation d'un nouveau rapport
    console.log('\n2Ô∏è‚É£ Test POST /admin/retro-reports');
    const newReport = {
      title: 'Test automatique R√©troReports',
      description: 'Ceci est un test automatique du syst√®me R√©troReports',
      category: 'Test',
      priority: 'low',
      type: 'other'
    };

    const createResponse = await fetch(`${API_URL}/admin/retro-reports`, {
      method: 'POST',
      headers: {
        'Authorization': 'Bearer test-token',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(newReport)
    });

    if (createResponse.ok) {
      const created = await createResponse.json();
      console.log(`‚úÖ Succ√®s: Rapport cr√©√© avec ID ${created.id}`);
      
      // Test 3: Ajout d'un commentaire
      console.log('\n3Ô∏è‚É£ Test POST /admin/retro-reports/:id/comments');
      const commentResponse = await fetch(`${API_URL}/admin/retro-reports/${created.id}/comments`, {
        method: 'POST',
        headers: {
          'Authorization': 'Bearer test-token',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          message: 'Test de commentaire automatique',
          status: 'in_progress'
        })
      });

      if (commentResponse.ok) {
        console.log('‚úÖ Succ√®s: Commentaire ajout√©');
      } else {
        console.log(`‚ùå √âchec commentaire: ${commentResponse.status}`);
      }

    } else {
      console.log(`‚ùå √âchec cr√©ation: ${createResponse.status}`);
    }

    console.log('\nüéâ Tests termin√©s !');

  } catch (error) {
    console.error('üí• Erreur lors des tests:', error.message);
  }
}

if (require.main === module) {
  testRetroReportsAPI();
}

module.exports = { testRetroReportsAPI };